<#ftl encoding="UTF-8">
<#import "/mylib.ftl" as mylib>
<#if !entity.root>
/**
 * WARNING: Generated code! Changes will be overriden!
 * Generated by: java/Entity.ftl
 */
package ${subnamespace}.${entity.namespace};

import pt.efacec.toolkit.common.service.entity.Entity<#if !entity.hasBehavior('AUDITLESS')>Auditable<#else>Base</#if>;

<#if entity.comments??>
/**
 * ${entity.comments?replace(".", ".\n *")}
 */
</#if>
public class ${entity.name} extends Entity<#if !entity.hasBehavior('AUDITLESS')>Auditable<#else>Base</#if><${java[entity.singleKey.type]}> {
    private static final long serialVersionUID = 1L;
    
	// ATTRIBUTES
<#list entity.attributes as attribute>
<#if !attribute.key && java[attribute.type]??>
	<#if attribute.lov??>
		<#assign type = subnamespace+'.'+attribute.lov.namespace+'.'+attribute.lov.name>
	<#else>
		<#assign type = mylib.mandatory(java[attribute.type], attribute.nullable)>
	</#if>
    <#if !attribute.key && attribute.defaultValue??>
        <#if attribute.lov??>
    protected ${type} ${attribute.name} = ${type}.${attribute.defaultValue};
        <#else>
    protected ${type} ${attribute.name} = new ${type}(${attribute.defaultValue});
        </#if>
    <#else>
    protected ${type} ${attribute.name};
    </#if>
    
    <#if attribute.comments??>
    /**
     * setter for ${attribute.name}.<br>
     * ${attribute.comments?replace(".", ".\n     *")}
     */
    </#if>
    public ${type} get${attribute.name?cap_first} () {
        return ${attribute.name};
    }
    
    <#if attribute.comments??>
    /**
     * getter for ${attribute.name}.<br>
     * ${attribute.comments?replace(".", ".\n     *")}
     */
    </#if>
    public void set${attribute.name?cap_first}(${type} ${attribute.name}) {
        dirtied("${attribute.name}");
        this.${attribute.name} = ${attribute.name};
    }
	
</#if>
</#list>
<#list entity.associations as association>
	<#-- associacao sem relacoes -->
	<#if (!association.many && association.fromTarget.many || !association.many && !association.fromTarget.many && association.owner) && !association.relations?? && !entity.fetchAttribute(association.alias)??>
        <#assign type=java[association.target.singleKey.type]>
        <#assign name=association.name+'Id'>
    protected ${type} ${name};

    <#if association.comments??>
    /**
     * getter for ${name}.<br>
     * ${association.comments?replace(".", ".\n     *")}
     */
    </#if>
    public ${type} get${name?cap_first}() {
        return ${name};
    }

    <#if association.comments??>
    /**
     * setter for ${name}.<br>
     * ${association.comments?replace(".", ".\n     *")}
     */
    </#if>
    public void set${name?cap_first}(${type} ${name}) {
        dirtied("${name}");
        this.${name} = ${name};
    }

	</#if>
</#list>
<#list entity.associations as association>
	<#if association.many>
	protected java.util.Set<${association.target.name}> ${association.name};
	<#else>
	protected ${association.target.name} ${association.name};
	</#if>

</#list>
<#list entity.associations as association>
	<#if (!association.many && association.fromTarget.many || !association.many && !association.fromTarget.many && association.owner)>
        <#if association.comments??>
    /**
     * getter for ${association.name}.<br>
     * ${association.comments?replace(".", ".\n     *")}
     */
        </#if>
	public ${association.target.name} get${association.name?cap_first}() {
		return ${association.name};
	}
	
        <#if association.comments??>
    /**
     * setter for ${association.name}.<br>
     * ${association.comments?replace(".", ".\n     *")}
     */
        </#if>
	public void set${association.name?cap_first}(${association.target.name} entity) {
		this.${association.name} = entity;
		<#if association.relations??>
        if(entity != null) {
			<#list association.relations as relation>
			${relation.foreign.name} = entity.get${relation.key.name?cap_first}();
			</#list>
        }
		<#elseif !entity.fetchAttribute(association.alias)??>
        if(entity != null) {
			set${association.name?cap_first}Id(entity.getId()); // this way it gets dirtied		
        }
		</#if>
	}
	<#else>
		<#assign tipo = association.target.name>
		<#if association.many>
			<#assign tipo = 'java.util.Set<'+tipo+'>'>	
		</#if>
    <#if association.comments??>
    /**
     * getter for ${association.name}.<br>
     * ${association.comments?replace(".", ".\n     *")}
     */
    </#if>
	public ${tipo} get${association.name?cap_first}() {
		return ${association.name};
	}
	
    <#if association.comments??>
    /**
     * setter for ${association.name}.<br>
     * ${association.comments?replace(".", ".\n     *")}
     */
    </#if>
	public void set${association.name?cap_first}(${tipo} ${association.name}) {
		this.${association.name} = ${association.name};
	}
	</#if>
	
</#list>
	@Override 
	public Object clone(){
		${entity.name} o = new ${entity.name}();
		o.copy(this);
		return o;
	}
	
	@Override
	public void copy(Object o) {
		if(o != null && o instanceof ${entity.name}){
			${entity.name} entity = (${entity.name}) o;

			super.copy(entity);
<#list entity.attributes as attribute>
<#if !attribute.key && java[attribute.type]??>
    <#if attribute.type == 'date' || attribute.type == 'timestamp' || attribute.type == 'time'>
            if (${attribute.name} != null) {
                this.${attribute.name} = new java.util.Date(entity.${attribute.name}.getTime());
            }
    <#else>
            this.${attribute.name} = entity.${attribute.name};
    </#if>
</#if>
</#list>
<#list entity.associations as association>
			set${association.name?cap_first}( entity.get${association.name?cap_first}() );
</#list>
		}
	}
		
    @Override 
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("{");
        sb.append("id: ").append(getId());
        sb.append(", version: ").append(getVersion());
<#if entity.attributes??>
	<#list entity.attributes as attribute>
        <#if !attribute.key && java[attribute.type]??>
        sb.append(", ${attribute.name}: ").append(${attribute.name});
        </#if>
	</#list>
</#if>
<#list entity.associations as association>
	<#if (!association.many && association.fromTarget.many || !association.many && !association.fromTarget.many && association.owner) && !association.relations?? && !entity.fetchAttribute(association.alias)??>
        sb.append(", ${association.name}Id: ").append(${association.name}Id);
	</#if>
</#list>
        sb.append("}");
        return sb.toString();
    }

}
</#if>