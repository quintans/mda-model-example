<#ftl encoding="UTF-8">
<#import "/mylib.ftl" as mylib>
/// <reference path="scadabt.d.ts"/>

// Generated by: ts/ServicesMock.ftl

module ${project}{
<#list Service as service>
	export class ${service.name}MockImpl {
		private timeout: ng.ITimeoutService;
	
		constructor(timeout: ng.ITimeoutService){
			this.timeout = timeout;
		}
	<#list service.operations as operation>
		<#-- return type -->
		<#assign ret = ''>
		<#if operation.modeledType>
			<#assign md = model[operation.type]>
			<#assign ret = md.name>
		<#elseif operation.customType>
			<#assign ret = operation.type>
		<#elseif operation.type??>
			<#if operation.single && !operation.paginate>
				<#assign ret = ts['string']>
			<#else>
				<#assign ret = ts[operation.type]>
			</#if>
		</#if>
		<#if !operation.single>
			<#assign ret = 'Array<'+ret+'>'>
		</#if>		
		<#if operation.paginate>
			<#assign ret = 'toolkit.Page<' + ret + '>'>
		</#if>
		<#-- parameters -->
		<#assign stringify = 0>
		<#assign param = ''>
		<#if operation.attributes?size == 1>
			<#assign parameter = operation.attributes?first>
			<#if parameter.modeledType>
				<#assign md = model[parameter.type]>
				<#assign param = md.name>
			<#elseif parameter.customType>
				<#assign param = parameter.type>
			<#else>
				<#assign param = ts[parameter.type]>
			</#if>
			<#if !parameter.single>
				<#assign param = 'Array<'+param+'>'>
			<#elseif parameter.type == 'boolean' || parameter.type == 'integer'>
				<#assign stringified = '"" + ' + parameter.name>
			<#elseif parameter.type == 'string'>
				<#assign stringified = '\'"\' + ' + parameter.name + ' + \'"\''>
			<#else>
				<#assign stringified = parameter.name>
			</#if>
		</#if>

		${operation.name}(<#if param != ''>${parameter.name}: ${param}, <#elseif (operation.attributes?size > 0)>input: ${operation.name?cap_first}In, </#if>successCallback?: (<#if ret!=''>result: ${ret}</#if>) => void): ng.IHttpPromise<any> {
			this.timeout(function(){
		    /* #CUSTOM_BLK_START ${mylib.dbUpperName(operation.name)}# */
		    // TODO: just do it
			/* #CUSTOM_BLK_END# */
			}, 100);
			return null;
		}
	</#list>
	}
	
</#list>
	angular.module("scadabt.services", [])<#if Service?size == 0>;</#if>
<#list Service as service>
		.factory("${service.name?uncap_first}", ["$timeout", function($timeout: ng.ITimeoutService): ${service.name} {
						return new ${service.name}MockImpl($timeout);
					}])<#if !service_has_next>;</#if>
</#list>
}
